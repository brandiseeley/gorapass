# Request to fetch all hikes in JSON format
GET http://localhost:8000/gorapass/hikes HTTP/1.1

###

# Request to fetch all stamps in JSON format
GET http://localhost:8000/gorapass/stamps HTTP/1.1

###
# Request to fetch stamps with filtration criteria

# Two stamps have this filtration criteria
POST http://localhost:8000/gorapass/stamps HTTP/1.1
content-type: application/json

{
    "selectors": [
        {
            "attribute_name": "region",
            "attribute_value": "Pohorje",
            "filter_type": "exact"
        },
        {
          "attribute_name": "elevation",
          "attribute_value": 1000,
          "filter_type": "greater_than"
        },
        {
          "attribute_name": "elevation",
          "attribute_value": 1500,
          "filter_type": "less_than"
        },
        {
          "attribute_name":"stamp_name",
          "attribute_value":"ka",
          "filter_type":"partial"
        }

    ]
}

# Check 400 responses for Stamps API with invalid filters
###
# Sending a request with a non-existant attribute return a 400 response
GET http://localhost:8000/gorapass/stamps HTTP/1.1
content-type: application/json

{
    "selectors": [
        {
            "attribute_name": "not_present",
            "attribute_value": "Pohorje",
            "filter_type": "exact"
        }
    ]
}

###
# Sending a request without the necessary filtration criteria returns a 400 response
GET http://localhost:8000/gorapass/stamps HTTP/1.1
content-type: application/json

{
    "selectors": [
        {
            "attribute_value": "Pohorje",
            "filter_type": "exact"
        }
    ]
}

###
# Sending a request with unknown filtration criteria returns a 400 response
GET http://localhost:8000/gorapass/stamps HTTP/1.1
content-type: application/json

{
    "selectors": [
        {
            "whoops": "this shouldn't be here",
            "attribute_name": "region",
            "attribute_value": "Pohorje",
            "filter_type": "exact"
        }
    ]
}

###
# Sending a request with an invalid filter type returns a 400 response
GET http://localhost:8000/gorapass/stamps HTTP/1.1
content-type: application/json

{
    "selectors": [
        {
            "attribute_name": "region",
            "attribute_value": "Pohorje",
            "filter_type": "exact_match"
        }
    ]
}




###

# Requests to fetch hikes with filtration criteria

# Three hikes have this starting point
GET http://localhost:8000/gorapass/hikes HTTP/1.1
content-type: application/json

{
    "selectors": [
        {
            "attribute_name": "starting_point",
            "attribute_value": "Kraljev dol",
            "filter_type": "exact"
        }
    ]
}

###
# We can match parts of words
GET http://localhost:8000/gorapass/hikes HTTP/1.1
content-type: application/json

{
    "selectors": [
        {
            "attribute_name": "starting_point",
            "attribute_value": "jev",
            "filter_type": "partial"
        }
    ]
}

###
# We can filter for attributes that are 'less than' some value
GET http://localhost:8000/gorapass/hikes HTTP/1.1
content-type: application/json

{
    "selectors": [
        {
            "attribute_name": "total_elevation_gain",
            "attribute_value": 50,
            "filter_type": "less_than"
        }
    ]
}

###
# We can filter for attributes that are 'greater than' some value
GET http://localhost:8000/gorapass/hikes HTTP/1.1
content-type: application/json

{
    "selectors": [
        {
            "attribute_name": "total_elevation_gain",
            "attribute_value": 3000,
            "filter_type": "greater_than"
        }
    ]
}

###
# We can combine 'greater than' and 'less than' to select a range
GET http://localhost:8000/gorapass/hikes HTTP/1.1
content-type: application/json

{
    "selectors": [
        {
            "attribute_name": "total_elevation_gain",
            "attribute_value": 3000,
            "filter_type": "less_than"
        },
        {
            "attribute_name": "total_elevation_gain",
            "attribute_value": 2000,
            "filter_type": "greater_than"
        }
    ]
}

###
# Sending a request with a non-existant attribute return a 400 response
GET http://localhost:8000/gorapass/hikes HTTP/1.1
content-type: application/json

{
    "selectors": [
        {
            "attribute_name": "not_present",
            "attribute_value": "Kraljev dol",
            "filter_type": "exact"
        }
    ]
}

###
# Sending a request without the necessary filtration criteria returns a 400 response
GET http://localhost:8000/gorapass/hikes HTTP/1.1
content-type: application/json

{
    "selectors": [
        {
            "attribute_value": "Kraljev dol",
            "filter_type": "exact"
        }
    ]
}

###
# Sending a request with unknown filtration criteria returns a 400 response
GET http://localhost:8000/gorapass/hikes HTTP/1.1
content-type: application/json

{
    "selectors": [
        {
            "whoops": "this shouldn't be here",
            "attribute_name": "starting_location",
            "attribute_value": "Kraljev dol",
            "filter_type": "exact"
        }
    ]
}

###
# Sending a request with an invalid filter type returns a 400 response
GET http://localhost:8000/gorapass/hikes HTTP/1.1
content-type: application/json

{
    "selectors": [
        {
            "attribute_name": "starting_point",
            "attribute_value": "Kraljev dol",
            "filter_type": "exact_match"
        }
    ]
}

###

# Sending multiple filters will return hikes who match *all* criteria
GET http://localhost:8000/gorapass/hikes HTTP/1.1
content-type: application/json

{
    "selectors": [
        {
            "attribute_name": "recommended_equipment_summer",
            "attribute_value": "nan",
            "filter_type": "exact"
        },
        {
            "attribute_name": "total_elevation_gain",
            "attribute_value": 1000,
            "filter_type": "exact"
        },
        {
            "attribute_name": "recommended_equipment_winter",
            "attribute_value": "cepin, dereze",
            "filter_type": "exact"
        }
    ]
}

###

# Sending filters that don't match any hikes will return an empty list
GET http://localhost:8000/gorapass/hikes HTTP/1.1
content-type: application/json

{
    "selectors": [
        {
            "attribute_name": "starting_point",
            "attribute_value": "random value",
            "filter_type": "exact"
        }
    ]
}